<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:p="http://primefaces.org/ui">

    <div style="text-align:center; padding: 1rem;">
        <h4 style="font-size: 1.2rem;font-weight: bold;margin-bottom: 0.5rem;box-sizing: border-box; border: 1px solid #dee2e6; color: #0b07f0">#{goalType}</h4>
        <canvas id="#{canvasId}"
                data-labels="#{labelsJson}"
                data-valores="#{valoresJson}"
                data-charttitle="#{chartTitle}"
                data-colores="#{coloresJson}"
                data-goal="#{goalJson}"
                style="width: 100%; display: block; margin: 0 auto; max-height: 400px; box-sizing: border-box; border: 1px solid #dee2e6;">
        </canvas>

        <div class="chart-title" style="font-weight: bold; color: #0b07f0">#{chartTitle}</div>
    </div>

    <h:outputScript>
    //<![CDATA[

    if (!window.chartInitFns) {
        window.chartInitFns = [];
    }

    window.chartInitFns.push(function() {
    
        const canvasId = "#{canvasId}";
        const canvas = document.getElementById(canvasId);

        if (!canvas) {
            console.warn(`⚠️ Canvas ${canvasId} no encontrado.`);
            return;
        }

        // Verifica visibilidad y si ya fue renderizado
        if (canvas.offsetParent === null) {
            console.log(`📌 ${canvasId} no está visible, se omite renderizado.`);
            return;
        }
        if (canvas.rendered) {
            console.log(`⏭️ ${canvasId} ya fue renderizado anteriormente.`);
            return;
        }
        
        const ctx = canvas.getContext("2d");
        const labels = JSON.parse(canvas.dataset.labels || "[]");
        const data = JSON.parse(canvas.dataset.valores || "[]");
        const chartTitle = canvas.dataset.charttitle || "";
        const goal = parseFloat(canvas.dataset.goal || "0");
        const colors = JSON.parse(canvas.dataset.colores || "[]");

        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: chartTitle,
                    data: data,
                    backgroundColor: colors
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                },
                plugins: {
                    datalabels: {
                        anchor: 'end',
                        align: 'top',
                        color: '#000',
                        font: { weight: 'bold', size: 11 }
                    },
                
                    annotation: {
                        annotations: {
                            goalLine: {
                                type: 'line',
                                yMin: goal,
                                yMax: goal,
                                borderColor: 'blue',
                                borderWidth: 1,
                                borderDash: [3, 3]
                            }
                        }
                    }
                }
            }
        });
        
        // Marcar como renderizado
        canvas.rendered = true;
        console.log(`✅ ${canvasId} renderizado correctamente.`);        
        
    });    
    
    //]]>
    </h:outputScript>
</ui:composition>
